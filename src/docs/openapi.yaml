openapi: 3.0.0
info:
  title: Yapily Integration API
  version: 1.0.0
  description: API documentation for Yapily Integration service

servers:
  - url: http://localhost:8080
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
    Account:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        accountType:
          type: string
        accountNumber:
          type: string
        balance:
          type: number
        currency:
          type: string
        institutionId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Transaction:
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        userId:
          type: string
        amount:
          type: number
        currency:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        status:
          type: string
        type:
          type: string
        category:
          type: string
    SyncStatus:
      type: object
      properties:
        accountId:
          type: string
        userId:
          type: string
        status:
          type: string
          enum: [pending, processing, completed, failed]
        progress:
          type: number
        total:
          type: number
        error:
          type: string
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time

# Remove or modify the global security requirement
security: [] # Remove this or comment it out

paths:
  /api/auth/register:
    post:
      tags: [Auth]
      summary: Register a new user
      # No security field here - endpoint is public
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        400:
          description: Invalid input
        409:
          description: Email already exists

  /api/auth/login:
    post:
      tags: [Auth]
      summary: Login user
      # No security field here - endpoint is public
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        401:
          description: Invalid credentials

  /api/yapily/institutions:
    get:
      tags: [Yapily]
      summary: Get list of supported banking institutions
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of institutions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string

  /api/yapily/accounts:
    get:
      tags: [Yapily]
      summary: Get user's linked bank accounts
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of accounts retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'

  /api/yapily/accounts/{accountId}/transactions:
    get:
      tags: [Yapily]
      summary: Get transactions for an account
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer

  /api/monitor/sync/{syncId}:
    get:
      tags: [Monitor]
      summary: Get sync status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: syncId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Sync status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncStatus'

  /api/yapily/consent:
    post:
      tags: [Yapily]
      summary: Initiate bank consent process
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - institutionId
              properties:
                institutionId:
                  type: string
      responses:
        200:
          description: Consent initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  consentToken:
                    type: string
                  authorizeUrl:
                    type: string
        400:
          description: Invalid input
        401:
          description: Unauthorized

  /api/yapily/auth/callback:
    get:
      tags: [Yapily]
      summary: Handle bank authorization callback
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: consent
          required: true
          schema:
            type: string
      responses:
        200:
          description: Accounts synced successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
        400:
          description: Invalid consent token
        401:
          description: Unauthorized

  /api/yapily/accounts/{accountId}/transactions/fetch:
    post:
      tags: [Yapily]
      summary: Start transaction sync for an account
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - consentToken
              properties:
                consentToken:
                  type: string
      responses:
        200:
          description: Transaction sync started
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  syncId:
                    type: string
                  statusUrl:
                    type: string
        400:
          description: Invalid input
        401:
          description: Unauthorized
        404:
          description: Account not found

  /api/auth/refresh-token:
    post:
      tags: [Auth]
      summary: Refresh access token
      description: Get new access token using refresh token from cookies
      responses:
        200:
          description: Token refresh successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        401:
          description: Invalid or expired refresh token

  /api/auth/logout:
    post:
      tags: [Auth]
      summary: Logout user
      description: Clear authentication tokens and cookies
      security:
        - bearerAuth: []
      responses:
        200:
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logged out successfully"
        401:
          description: Unauthorized 